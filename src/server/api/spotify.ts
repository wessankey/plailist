import { Playlist } from "@/types";

const BASE_URL = "https://api.spotify.com/v1";
const USER_ID = process.env.SPOTIFY_USER_ID;

export async function createPlaylist(playlist: Playlist): Promise<boolean> {
  const url = `${BASE_URL}/users/${USER_ID}/playlists`;
  const response = await fetch(url, {
    method: "POST",
    headers: {
      Authorization: `Bearer ${process.env.SPOTIFY_API_KEY}`,
    },
    body: JSON.stringify({
      name: "AI Generated Playlist",
      description: "Playlist generated by the plailist app",
      public: false,
    }),
  });

  if (response.status !== 201) return false;
  const playlistResponse = await response.json();

  const trackUris = playlist.map((track) => track.uri);
  return await addTracksToPlaylist(playlistResponse.id, trackUris);
}

export async function addTracksToPlaylist(
  playlistId: string,
  trackUris: string[]
) {
  const url = `${BASE_URL}/playlists/${playlistId}/tracks`;
  const response = await fetch(url, {
    method: "POST",
    headers: {
      Authorization: `Bearer ${process.env.SPOTIFY_API_KEY}`,
    },
    body: JSON.stringify({
      uris: trackUris,
    }),
  });

  return response.status === 201;
}

export async function lookupSong({
  artist,
  title,
}: {
  artist: string;
  title: string;
}) {
  const urlEncodedArtist = encodeURIComponent(artist);
  const urlEncodedTitle = encodeURIComponent(title);

  const url = `${BASE_URL}/search?&type=track&q=artist:${urlEncodedArtist}%20track:${urlEncodedTitle}&limit=1`;

  const response = await fetch(url, {
    headers: {
      Authorization: `Bearer ${process.env.SPOTIFY_API_KEY}`,
    },
  });

  const data = await response.json();

  if (data.tracks.items && data.tracks.items.length > 0) {
    const track = data.tracks.items[0];

    return {
      artist: track.artists[0].name,
      name: track.name,
      album: track.album.name,
      uri: track.uri,
      images: track.album.images,
      duration: track.duration_ms,
      popularity: track.popularity,
    };
  }

  return null;
}
